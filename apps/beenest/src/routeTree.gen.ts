/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DemoRouteImport } from './routes/demo'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LayoutOrdersRouteImport } from './routes/_layout/orders'
import { Route as LayoutDashboardRouteImport } from './routes/_layout/dashboard'
import { Route as LayoutSuppliersIndexRouteImport } from './routes/_layout/suppliers/index'
import { Route as LayoutProductsIndexRouteImport } from './routes/_layout/products/index'
import { Route as LayoutInventoryIndexRouteImport } from './routes/_layout/inventory/index'
import { Route as LayoutSuppliersAddRouteImport } from './routes/_layout/suppliers/add'
import { Route as LayoutProductsAddRouteImport } from './routes/_layout/products/add'
import { Route as LayoutProductsProductIdRouteImport } from './routes/_layout/products/$productId'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoRoute = DemoRouteImport.update({
  id: '/demo',
  path: '/demo',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutOrdersRoute = LayoutOrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutDashboardRoute = LayoutDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSuppliersIndexRoute = LayoutSuppliersIndexRouteImport.update({
  id: '/suppliers/',
  path: '/suppliers/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProductsIndexRoute = LayoutProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutInventoryIndexRoute = LayoutInventoryIndexRouteImport.update({
  id: '/inventory/',
  path: '/inventory/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSuppliersAddRoute = LayoutSuppliersAddRouteImport.update({
  id: '/suppliers/add',
  path: '/suppliers/add',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProductsAddRoute = LayoutProductsAddRouteImport.update({
  id: '/products/add',
  path: '/products/add',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProductsProductIdRoute = LayoutProductsProductIdRouteImport.update({
  id: '/products/$productId',
  path: '/products/$productId',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/demo': typeof DemoRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof LayoutDashboardRoute
  '/orders': typeof LayoutOrdersRoute
  '/products/$productId': typeof LayoutProductsProductIdRoute
  '/products/add': typeof LayoutProductsAddRoute
  '/suppliers/add': typeof LayoutSuppliersAddRoute
  '/inventory': typeof LayoutInventoryIndexRoute
  '/products': typeof LayoutProductsIndexRoute
  '/suppliers': typeof LayoutSuppliersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/demo': typeof DemoRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof LayoutDashboardRoute
  '/orders': typeof LayoutOrdersRoute
  '/products/$productId': typeof LayoutProductsProductIdRoute
  '/products/add': typeof LayoutProductsAddRoute
  '/suppliers/add': typeof LayoutSuppliersAddRoute
  '/inventory': typeof LayoutInventoryIndexRoute
  '/products': typeof LayoutProductsIndexRoute
  '/suppliers': typeof LayoutSuppliersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/demo': typeof DemoRoute
  '/login': typeof LoginRoute
  '/_layout/dashboard': typeof LayoutDashboardRoute
  '/_layout/orders': typeof LayoutOrdersRoute
  '/_layout/products/$productId': typeof LayoutProductsProductIdRoute
  '/_layout/products/add': typeof LayoutProductsAddRoute
  '/_layout/suppliers/add': typeof LayoutSuppliersAddRoute
  '/_layout/inventory/': typeof LayoutInventoryIndexRoute
  '/_layout/products/': typeof LayoutProductsIndexRoute
  '/_layout/suppliers/': typeof LayoutSuppliersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/demo'
    | '/login'
    | '/dashboard'
    | '/orders'
    | '/products/$productId'
    | '/products/add'
    | '/suppliers/add'
    | '/inventory'
    | '/products'
    | '/suppliers'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/demo'
    | '/login'
    | '/dashboard'
    | '/orders'
    | '/products/$productId'
    | '/products/add'
    | '/suppliers/add'
    | '/inventory'
    | '/products'
    | '/suppliers'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/_layout'
    | '/demo'
    | '/login'
    | '/_layout/dashboard'
    | '/_layout/orders'
    | '/_layout/products/$productId'
    | '/_layout/products/add'
    | '/_layout/suppliers/add'
    | '/_layout/inventory/'
    | '/_layout/products/'
    | '/_layout/suppliers/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  DemoRoute: typeof DemoRoute
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo': {
      id: '/demo'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/orders': {
      id: '/_layout/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof LayoutOrdersRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/dashboard': {
      id: '/_layout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/suppliers/': {
      id: '/_layout/suppliers/'
      path: '/suppliers'
      fullPath: '/suppliers'
      preLoaderRoute: typeof LayoutSuppliersIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/products/': {
      id: '/_layout/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof LayoutProductsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/inventory/': {
      id: '/_layout/inventory/'
      path: '/inventory'
      fullPath: '/inventory'
      preLoaderRoute: typeof LayoutInventoryIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/suppliers/add': {
      id: '/_layout/suppliers/add'
      path: '/suppliers/add'
      fullPath: '/suppliers/add'
      preLoaderRoute: typeof LayoutSuppliersAddRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/products/add': {
      id: '/_layout/products/add'
      path: '/products/add'
      fullPath: '/products/add'
      preLoaderRoute: typeof LayoutProductsAddRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/products/$productId': {
      id: '/_layout/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof LayoutProductsProductIdRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutDashboardRoute: typeof LayoutDashboardRoute
  LayoutOrdersRoute: typeof LayoutOrdersRoute
  LayoutProductsProductIdRoute: typeof LayoutProductsProductIdRoute
  LayoutProductsAddRoute: typeof LayoutProductsAddRoute
  LayoutSuppliersAddRoute: typeof LayoutSuppliersAddRoute
  LayoutInventoryIndexRoute: typeof LayoutInventoryIndexRoute
  LayoutProductsIndexRoute: typeof LayoutProductsIndexRoute
  LayoutSuppliersIndexRoute: typeof LayoutSuppliersIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDashboardRoute: LayoutDashboardRoute,
  LayoutOrdersRoute: LayoutOrdersRoute,
  LayoutProductsProductIdRoute: LayoutProductsProductIdRoute,
  LayoutProductsAddRoute: LayoutProductsAddRoute,
  LayoutSuppliersAddRoute: LayoutSuppliersAddRoute,
  LayoutInventoryIndexRoute: LayoutInventoryIndexRoute,
  LayoutProductsIndexRoute: LayoutProductsIndexRoute,
  LayoutSuppliersIndexRoute: LayoutSuppliersIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  LayoutRoute: LayoutRouteWithChildren,
  DemoRoute: DemoRoute,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
