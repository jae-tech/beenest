/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AnalyticsRouteImport } from './routes/analytics'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LayoutTransactionsRouteImport } from './routes/_layout/transactions'
import { Route as LayoutSettingsRouteImport } from './routes/_layout/settings'
import { Route as LayoutOrdersRouteImport } from './routes/_layout/orders'
import { Route as LayoutInventoryRouteImport } from './routes/_layout/inventory'
import { Route as LayoutDashboardRouteImport } from './routes/_layout/dashboard'
import { Route as LayoutSuppliersIndexRouteImport } from './routes/_layout/suppliers/index'
import { Route as LayoutProductsIndexRouteImport } from './routes/_layout/products/index'
import { Route as LayoutInventoryIndexRouteImport } from './routes/_layout/inventory/index'
import { Route as LayoutSuppliersAddRouteImport } from './routes/_layout/suppliers/add'
import { Route as LayoutProductsAddRouteImport } from './routes/_layout/products/add'
import { Route as LayoutProductsProductIdRouteImport } from './routes/_layout/products/$productId'
import { Route as LayoutInventoryAdjustRouteImport } from './routes/_layout/inventory/adjust'
import { Route as LayoutProductsProductIdEditRouteImport } from './routes/_layout/products/$productId/edit'
import { Route as LayoutInventoryProductIdAdjustRouteImport } from './routes/_layout/inventory/$productId/adjust'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AnalyticsRoute = AnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutTransactionsRoute = LayoutTransactionsRouteImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSettingsRoute = LayoutSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutOrdersRoute = LayoutOrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutInventoryRoute = LayoutInventoryRouteImport.update({
  id: '/inventory',
  path: '/inventory',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutDashboardRoute = LayoutDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSuppliersIndexRoute = LayoutSuppliersIndexRouteImport.update({
  id: '/suppliers/',
  path: '/suppliers/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProductsIndexRoute = LayoutProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutInventoryIndexRoute = LayoutInventoryIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutInventoryRoute,
} as any)
const LayoutSuppliersAddRoute = LayoutSuppliersAddRouteImport.update({
  id: '/suppliers/add',
  path: '/suppliers/add',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProductsAddRoute = LayoutProductsAddRouteImport.update({
  id: '/products/add',
  path: '/products/add',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProductsProductIdRoute = LayoutProductsProductIdRouteImport.update({
  id: '/products/$productId',
  path: '/products/$productId',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutInventoryAdjustRoute = LayoutInventoryAdjustRouteImport.update({
  id: '/adjust',
  path: '/adjust',
  getParentRoute: () => LayoutInventoryRoute,
} as any)
const LayoutProductsProductIdEditRoute =
  LayoutProductsProductIdEditRouteImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => LayoutProductsProductIdRoute,
  } as any)
const LayoutInventoryProductIdAdjustRoute =
  LayoutInventoryProductIdAdjustRouteImport.update({
    id: '/$productId/adjust',
    path: '/$productId/adjust',
    getParentRoute: () => LayoutInventoryRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/analytics': typeof AnalyticsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/dashboard': typeof LayoutDashboardRoute
  '/inventory': typeof LayoutInventoryRouteWithChildren
  '/orders': typeof LayoutOrdersRoute
  '/settings': typeof LayoutSettingsRoute
  '/transactions': typeof LayoutTransactionsRoute
  '/inventory/adjust': typeof LayoutInventoryAdjustRoute
  '/products/$productId': typeof LayoutProductsProductIdRouteWithChildren
  '/products/add': typeof LayoutProductsAddRoute
  '/suppliers/add': typeof LayoutSuppliersAddRoute
  '/inventory/': typeof LayoutInventoryIndexRoute
  '/products': typeof LayoutProductsIndexRoute
  '/suppliers': typeof LayoutSuppliersIndexRoute
  '/inventory/$productId/adjust': typeof LayoutInventoryProductIdAdjustRoute
  '/products/$productId/edit': typeof LayoutProductsProductIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/analytics': typeof AnalyticsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/dashboard': typeof LayoutDashboardRoute
  '/orders': typeof LayoutOrdersRoute
  '/settings': typeof LayoutSettingsRoute
  '/transactions': typeof LayoutTransactionsRoute
  '/inventory/adjust': typeof LayoutInventoryAdjustRoute
  '/products/$productId': typeof LayoutProductsProductIdRouteWithChildren
  '/products/add': typeof LayoutProductsAddRoute
  '/suppliers/add': typeof LayoutSuppliersAddRoute
  '/inventory': typeof LayoutInventoryIndexRoute
  '/products': typeof LayoutProductsIndexRoute
  '/suppliers': typeof LayoutSuppliersIndexRoute
  '/inventory/$productId/adjust': typeof LayoutInventoryProductIdAdjustRoute
  '/products/$productId/edit': typeof LayoutProductsProductIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/analytics': typeof AnalyticsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_layout/dashboard': typeof LayoutDashboardRoute
  '/_layout/inventory': typeof LayoutInventoryRouteWithChildren
  '/_layout/orders': typeof LayoutOrdersRoute
  '/_layout/settings': typeof LayoutSettingsRoute
  '/_layout/transactions': typeof LayoutTransactionsRoute
  '/_layout/inventory/adjust': typeof LayoutInventoryAdjustRoute
  '/_layout/products/$productId': typeof LayoutProductsProductIdRouteWithChildren
  '/_layout/products/add': typeof LayoutProductsAddRoute
  '/_layout/suppliers/add': typeof LayoutSuppliersAddRoute
  '/_layout/inventory/': typeof LayoutInventoryIndexRoute
  '/_layout/products/': typeof LayoutProductsIndexRoute
  '/_layout/suppliers/': typeof LayoutSuppliersIndexRoute
  '/_layout/inventory/$productId/adjust': typeof LayoutInventoryProductIdAdjustRoute
  '/_layout/products/$productId/edit': typeof LayoutProductsProductIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/analytics'
    | '/login'
    | '/register'
    | '/dashboard'
    | '/inventory'
    | '/orders'
    | '/settings'
    | '/transactions'
    | '/inventory/adjust'
    | '/products/$productId'
    | '/products/add'
    | '/suppliers/add'
    | '/inventory/'
    | '/products'
    | '/suppliers'
    | '/inventory/$productId/adjust'
    | '/products/$productId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/analytics'
    | '/login'
    | '/register'
    | '/dashboard'
    | '/orders'
    | '/settings'
    | '/transactions'
    | '/inventory/adjust'
    | '/products/$productId'
    | '/products/add'
    | '/suppliers/add'
    | '/inventory'
    | '/products'
    | '/suppliers'
    | '/inventory/$productId/adjust'
    | '/products/$productId/edit'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/_layout'
    | '/analytics'
    | '/login'
    | '/register'
    | '/_layout/dashboard'
    | '/_layout/inventory'
    | '/_layout/orders'
    | '/_layout/settings'
    | '/_layout/transactions'
    | '/_layout/inventory/adjust'
    | '/_layout/products/$productId'
    | '/_layout/products/add'
    | '/_layout/suppliers/add'
    | '/_layout/inventory/'
    | '/_layout/products/'
    | '/_layout/suppliers/'
    | '/_layout/inventory/$productId/adjust'
    | '/_layout/products/$productId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  AnalyticsRoute: typeof AnalyticsRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/analytics': {
      id: '/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/transactions': {
      id: '/_layout/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof LayoutTransactionsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/orders': {
      id: '/_layout/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof LayoutOrdersRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/inventory': {
      id: '/_layout/inventory'
      path: '/inventory'
      fullPath: '/inventory'
      preLoaderRoute: typeof LayoutInventoryRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/dashboard': {
      id: '/_layout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/suppliers/': {
      id: '/_layout/suppliers/'
      path: '/suppliers'
      fullPath: '/suppliers'
      preLoaderRoute: typeof LayoutSuppliersIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/products/': {
      id: '/_layout/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof LayoutProductsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/inventory/': {
      id: '/_layout/inventory/'
      path: '/'
      fullPath: '/inventory/'
      preLoaderRoute: typeof LayoutInventoryIndexRouteImport
      parentRoute: typeof LayoutInventoryRoute
    }
    '/_layout/suppliers/add': {
      id: '/_layout/suppliers/add'
      path: '/suppliers/add'
      fullPath: '/suppliers/add'
      preLoaderRoute: typeof LayoutSuppliersAddRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/products/add': {
      id: '/_layout/products/add'
      path: '/products/add'
      fullPath: '/products/add'
      preLoaderRoute: typeof LayoutProductsAddRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/products/$productId': {
      id: '/_layout/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof LayoutProductsProductIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/inventory/adjust': {
      id: '/_layout/inventory/adjust'
      path: '/adjust'
      fullPath: '/inventory/adjust'
      preLoaderRoute: typeof LayoutInventoryAdjustRouteImport
      parentRoute: typeof LayoutInventoryRoute
    }
    '/_layout/products/$productId/edit': {
      id: '/_layout/products/$productId/edit'
      path: '/edit'
      fullPath: '/products/$productId/edit'
      preLoaderRoute: typeof LayoutProductsProductIdEditRouteImport
      parentRoute: typeof LayoutProductsProductIdRoute
    }
    '/_layout/inventory/$productId/adjust': {
      id: '/_layout/inventory/$productId/adjust'
      path: '/$productId/adjust'
      fullPath: '/inventory/$productId/adjust'
      preLoaderRoute: typeof LayoutInventoryProductIdAdjustRouteImport
      parentRoute: typeof LayoutInventoryRoute
    }
  }
}

interface LayoutInventoryRouteChildren {
  LayoutInventoryAdjustRoute: typeof LayoutInventoryAdjustRoute
  LayoutInventoryIndexRoute: typeof LayoutInventoryIndexRoute
  LayoutInventoryProductIdAdjustRoute: typeof LayoutInventoryProductIdAdjustRoute
}

const LayoutInventoryRouteChildren: LayoutInventoryRouteChildren = {
  LayoutInventoryAdjustRoute: LayoutInventoryAdjustRoute,
  LayoutInventoryIndexRoute: LayoutInventoryIndexRoute,
  LayoutInventoryProductIdAdjustRoute: LayoutInventoryProductIdAdjustRoute,
}

const LayoutInventoryRouteWithChildren = LayoutInventoryRoute._addFileChildren(
  LayoutInventoryRouteChildren,
)

interface LayoutProductsProductIdRouteChildren {
  LayoutProductsProductIdEditRoute: typeof LayoutProductsProductIdEditRoute
}

const LayoutProductsProductIdRouteChildren: LayoutProductsProductIdRouteChildren =
  {
    LayoutProductsProductIdEditRoute: LayoutProductsProductIdEditRoute,
  }

const LayoutProductsProductIdRouteWithChildren =
  LayoutProductsProductIdRoute._addFileChildren(
    LayoutProductsProductIdRouteChildren,
  )

interface LayoutRouteChildren {
  LayoutDashboardRoute: typeof LayoutDashboardRoute
  LayoutInventoryRoute: typeof LayoutInventoryRouteWithChildren
  LayoutOrdersRoute: typeof LayoutOrdersRoute
  LayoutSettingsRoute: typeof LayoutSettingsRoute
  LayoutTransactionsRoute: typeof LayoutTransactionsRoute
  LayoutProductsProductIdRoute: typeof LayoutProductsProductIdRouteWithChildren
  LayoutProductsAddRoute: typeof LayoutProductsAddRoute
  LayoutSuppliersAddRoute: typeof LayoutSuppliersAddRoute
  LayoutProductsIndexRoute: typeof LayoutProductsIndexRoute
  LayoutSuppliersIndexRoute: typeof LayoutSuppliersIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDashboardRoute: LayoutDashboardRoute,
  LayoutInventoryRoute: LayoutInventoryRouteWithChildren,
  LayoutOrdersRoute: LayoutOrdersRoute,
  LayoutSettingsRoute: LayoutSettingsRoute,
  LayoutTransactionsRoute: LayoutTransactionsRoute,
  LayoutProductsProductIdRoute: LayoutProductsProductIdRouteWithChildren,
  LayoutProductsAddRoute: LayoutProductsAddRoute,
  LayoutSuppliersAddRoute: LayoutSuppliersAddRoute,
  LayoutProductsIndexRoute: LayoutProductsIndexRoute,
  LayoutSuppliersIndexRoute: LayoutSuppliersIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  LayoutRoute: LayoutRouteWithChildren,
  AnalyticsRoute: AnalyticsRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
